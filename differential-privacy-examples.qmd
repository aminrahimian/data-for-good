---
title: "Differential privacy examples"
author: "Dominic Bordelon"
date: "2022-11-08"
format: 
  gfm: default
---

```{r}
#| output: false
library(tidyverse)
library(janitor)
library(medicaldata)
library(patchwork)
library(ggthemes)
library(VGAM)
```

## The data

From the [{medicaldata}](https://github.com/higgi13425/medicaldata) package, run `?indo_rct`.

```{r}
indo <- indo_rct %>% 
  select(2:5)

site_b <- ggplot(indo, aes(y=site)) + geom_bar()
age_h <- ggplot(indo, aes(age)) + geom_histogram(binwidth = 1)
risk_h <- ggplot(indo, aes(risk)) + geom_histogram(binwidth = 0.25)
gender_b <- ggplot(indo, aes(y=gender)) + geom_bar()

(site_b | age_h) / (risk_h | gender_b)
```

```{r}
indo %>% 
  mutate(age_rd = signif(age, digits=1)) %>% 
  tabyl(age_rd, risk, gender)
```

## Determining $k$-anonymity

```{r}
indo %>% 
  group_by(across()) %>% 
  summarize(k_value = n()) %>% 
  arrange(desc(k_value))
```

Using rounding to generalize:

```{r}
indo %>% 
  mutate(age = signif(age, digits=1),
         risk = round(risk)) %>% 
  group_by(across()) %>% 
  summarize(k_value = n()) %>%
  ungroup() %>% 
  arrange(desc(k_value)) %>% 
  select(k_value) %>% 
  tail(1)
```

What do the rounded data look like?

```{r}
indo_rd <- indo %>% 
  mutate(age = signif(age, digits=1),
         risk = round(risk))

site_br <- ggplot(indo_rd, aes(y=site)) + geom_bar()
age_hr <- ggplot(indo_rd, aes(age)) + geom_histogram()
risk_hr <- ggplot(indo_rd, aes(risk)) + geom_histogram()
gender_br <- ggplot(indo_rd, aes(y=gender)) + geom_bar()

(site_br | age_hr) / (risk_hr | gender_br)
```

## A look at the Laplace mechanism

Counting attack: how many patients in the dataset have an age of 45 or older?

```{r}
indo %>% 
  filter(age >= 45) %>% 
  nrow()
```

Generating random numbers using the Laplace distribution, using the [{VGAM}](https://cran.r-project.org/web/packages/VGAM/index.html) package's `rlaplace` funtion:

```{r}
sensitivity = 1
epsilon = 0.1

rlaplace(n=1, location=0, scale=sensitivity/epsilon)
```

Now let's add that randomization to our row count:

```{r}
indo %>% 
  filter(age >= 45) %>% 
  nrow() + rlaplace(n=1, location=0, scale=sensitivity/epsilon)
```

## Sequential composition: the $\epsilon$s add up

How does the successive application of mechanisms (via multiple data releases) affect the dataset's overall privacy budget over time?

Given release $F_1(x)$ satisfying $\epsilon_1$-differential privacy, and release $F_2(x)$ satisfying $\epsilon_2$-differential privacy, the mechanism $G(x) = (F_1(x), F_2(x))$ which releases both sets satisfies $\epsilon_1 + \epsilon_2$-differential privacy as a *maximum* bound.

```{r}
sensitivity = 1
epsilon = 1

releases <- tibble(
  F1 = rlaplace(n=1000, location=0, scale=sensitivity/1),
  F2 = rlaplace(n=1000, location=0, scale=sensitivity/2),
  F3 = rlaplace(n=1000, location=0, scale=sensitivity/3),
  G = (F1+F2)/2
  ) 

p <- palette.colors("okabe-ito", n=8)
f1_f2_plot <- releases %>% 
  ggplot() +
  geom_freqpoly(aes(F1), binwidth=0.2, color=p["blue"]) +
  geom_freqpoly(aes(F2), binwidth=0.2, color=p["vermillion"]) + 
  labs(title="F1 and F2", x=element_blank()) +
  scale_y_continuous(limits=c(0,200)) +
  theme_minimal()

f3_plot <- releases %>% 
  ggplot() +
  geom_freqpoly(aes(F3), binwidth=0.2, color=p["bluishgreen"]) +
  labs(title="F3", x=element_blank()) +
  scale_y_continuous(limits=c(0,300)) +
  theme_minimal()

f1_f2_g_plot <- releases %>% 
  ggplot() +
  geom_freqpoly(aes(F1), binwidth=0.2, color=p["blue"]) +
  geom_freqpoly(aes(F2), binwidth=0.2, color=p["vermillion"]) + 
  geom_freqpoly(aes(G), binwidth=0.2, color=p["reddishpurple"]) + 
  labs(title="G(F1, F2) sequence", x=element_blank()) +
  scale_y_continuous(limits=c(0,200)) +
  theme_minimal()

f3_g_plot <- releases %>% 
  ggplot() +
  geom_freqpoly(aes(F3), binwidth=0.2, color=p["bluishgreen"]) +
  geom_freqpoly(aes(G), binwidth=0.2, color=p["reddishpurple"]) + 
  labs(title="G(F1, F2) versus F3 (3)", x=element_blank()) +
  scale_y_continuous(limits=c(0,300)) +
  theme_minimal()

(f1_f2_plot | f1_f2_g_plot) / (f3_plot | f3_g_plot)
```

## Applying the Laplace mechanism to `indo_rct`

```{r}
sensitivity = 1

lp1 = rlaplace(n=602, location=0, scale=sensitivity/1)
lp3 = rlaplace(n=602, location=0, scale=sensitivity/3)
indo_dp <- bind_cols(indo, lp1=lp1, lp3=lp3)

indo_dp <- indo_dp %>% 
  mutate(age_ep1 = age+lp1, age_ep3=age+lp3)

ggplot(indo_dp) + 
  geom_histogram(aes(age), binwidth=1, alpha=0.3, fill="blue") + 
  geom_histogram(aes(age_ep1), binwidth=1, alpha=0.3, fill="red")
```

```{r}
indo_dp %>%
  select(age, age_ep1) %>% 
  summary()
```

Let's try with `risk`...

```{r}
sensitivity = 0.4
# code snippet to play with sensitivity for a reasonable result srange:
# sort(rlaplace(n=602, location=0, scale=sensitivity/1))
lp1_rsk = rlaplace(n=602, location=0, scale=sensitivity/1)
indo_dp <- bind_cols(indo_dp, lp1_rsk=lp1_rsk)

indo_dp <- indo_dp %>% 
  mutate(risk_ep1 = risk+lp1_rsk)

ggplot(indo_dp) + 
  geom_histogram(aes(risk), binwidth=0.25, alpha=0.3, fill="blue") + 
  geom_histogram(aes(risk_ep1), binwidth=0.25, alpha=0.3, fill="red")
```

```{r}
indo_dp %>%
  select(risk, risk_ep1) %>% 
  summary()
```
